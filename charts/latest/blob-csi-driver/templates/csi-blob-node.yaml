kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-blob-node
  namespace: {{ .Release.Namespace }}
{{ include "blob.labels" . | indent 2 }}
spec:
  selector:
    matchLabels:
      app: csi-blob-node
  template:
    metadata:
{{ include "blob.labels" . | indent 6 }}
        app: csi-blob-node
        {{- if .Values.podLabels }}
{{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: csi-blob-node-sa
      nodeSelector:
        kubernetes.io/os: linux
{{- with .Values.node.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
        {{- if .Values.node.affinity }}
{{- toYaml .Values.node.affinity | nindent 8 }}
        {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      tolerations:
        - operator: "Exists"
        {{- if .Values.node.tolerations }}
{{- toYaml .Values.node.tolerations | nindent 8 }}
        {{- end }}
      containers:
        - name: liveness-probe
          imagePullPolicy: {{ .Values.image.livenessProbe.pullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: "{{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}"
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29633
            - --v=2
          resources: {{- toYaml .Values.node.resources.livenessProbe | nindent 12 }}
        - name: node-driver-registrar
          image: "{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/blob.csi.azure.com-reg.sock /csi/csi.sock"]
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{ .Values.kubelet.linuxPath }}/plugins/blob.csi.azure.com/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources: {{- toYaml .Values.node.resources.nodeDriverRegistrar | nindent 12 }}
        - name: blob
          image: "{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
          args:
            - "--v={{ .Values.node.logLevel }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--blobfuse-proxy-endpoint=$(BLOBFUSE_PROXY_ENDPOINT)"
            - "--enable-blobfuse-proxy={{ .Values.node.enableBlobfuseProxy }}"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--metrics-address=0.0.0.0:{{ .Values.node.metricsPort }}"
          ports:
            - containerPort: 29633
              name: healthz
              protocol: TCP
            - containerPort: {{ .Values.node.metricsPort }}
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path
                  optional: true
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: BLOBFUSE_PROXY_ENDPOINT
              value: unix:///csi/blobfuse-proxy.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: AZURE_ENVIRONMENT_FILEPATH
              value: /etc/kubernetes/azurestackcloud.json
            {{- end }}
          imagePullPolicy: {{ .Values.image.blob.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: {{ .Values.kubelet.linuxPath }}/
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /etc/kubernetes/
              name: azure-cred
            - mountPath: /var/lib/waagent/ManagedIdentity-Settings
              readOnly: true
              name: msi
            - mountPath: /mnt
              name: blob-cache
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: ssl
              mountPath: /etc/ssl/certs
              readOnly: true
            {{- end }}
          resources: {{- toYaml .Values.node.resources.blob | nindent 12 }}
      volumes:
        - hostPath:
            path: {{ .Values.kubelet.linuxPath }}/plugins/blob.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: {{ .Values.kubelet.linuxPath }}/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: {{ .Values.kubelet.linuxPath }}/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: Directory
          name: azure-cred
        - hostPath:
            path: /var/lib/waagent/ManagedIdentity-Settings
          name: msi
        - hostPath:
            path: /mnt
          name: blob-cache
        {{- if eq .Values.cloud "AzureStackCloud" }}
        - name: ssl
          hostPath:
            path: /etc/ssl/certs
        {{- end }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
