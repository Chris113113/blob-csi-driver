image:
  blob:
    repository: mcr.microsoft.com/k8s/csi/blob-csi
    tag: latest
    pullPolicy: IfNotPresent
  csiProvisioner:
    repository: mcr.microsoft.com/oss/kubernetes-csi/csi-provisioner
    tag: v2.1.0
    pullPolicy: IfNotPresent
  livenessProbe:
    repository: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe
    tag: v2.3.0
    pullPolicy: IfNotPresent
  nodeDriverRegistrar:
    repository: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar
    tag: v2.2.0
    pullPolicy: IfNotPresent
  csiResizer:
    repository: mcr.microsoft.com/oss/kubernetes-csi/csi-resizer
    tag: v1.1.0
    pullPolicy: IfNotPresent

## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# - name: myRegistryKeySecretName

serviceAccount:
  create: true

rbac:
  create: true

controller:
  metricsPort: 29634
  replicas: 2
  runOnMaster: false
  logLevel: 5
  resources:
    csiProvisioner:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 10m
        memory: 20Mi
    livenessProbe:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    blob:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiResizer:
      limits:
        cpu: 100m
        memory: 300Mi
      requests:
        cpu: 10m
        memory: 20Mi
  affinity: {}
  nodeSelector: {}
  tolerations: []

node:
  metricsPort: 29635
  logLevel: 5
  enableBlobfuseProxy: false
  blobfuseCachePath: /mnt
  resources:
    livenessProbe:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    nodeDriverRegistrar:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    blob:
      limits:
        cpu: "2"
        memory: 2100Mi
      requests:
        cpu: 10m
        memory: 20Mi
  affinity: {}
  nodeSelector: {}
  tolerations: []
  livenessProbe:
    healthPort: 29633

feature:
  enableFSGroupPolicy: false

linux:
  kubelet: /var/lib/kubelet
  distro: debian

cloud: AzurePublicCloud

## Collection of annotations to add to all the pods
podAnnotations: {}
## Collection of labels to add to all the pods
podLabels: {}
## Leverage a PriorityClass to ensure your pods survive resource shortages
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: system-cluster-critical
## Security context give the opportunity to run container as nonroot by setting a securityContext
## by example :
## securityContext: { runAsUser: 1001 }
securityContext: {}
